{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omkar\\\\OneDrive\\\\\\u753B\\u50CF\\\\my-mern-project\\\\my-mern-project\\\\frontend\\\\src\\\\components\\\\QuizQuestions.js\",\n  _s = $RefreshSig$();\n// src/components/QuizQuestions.js\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './QuizQuestions.css'; // Add your styles for the quiz questions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [\n// Add your 15 questions here\n{\n  question: \"What is the Taj Mahal?\",\n  options: [\"A monument\", \"A city\", \"A river\", \"A dance\"],\n  answer: \"A monument\"\n}, {\n  question: \"What is the Taj Mahal?\",\n  options: [\"A monument\", \"A city\", \"A river\", \"A dance\"],\n  answer: \"A monument\"\n}, {\n  question: \"What is the Taj Mahal?\",\n  options: [\"A monument\", \"A city\", \"A river\", \"A dance\"],\n  answer: \"A monument\"\n}, {\n  question: \"What is the Taj Mahal?\",\n  options: [\"A monument\", \"A city\", \"A river\", \"A dance\"],\n  answer: \"A monument\"\n}, {\n  question: \"What is the Taj Mahal?\",\n  options: [\"A monument\", \"A city\", \"A river\", \"A dance\"],\n  answer: \"A monument\"\n}, {\n  question: \"What is the Taj Mahal?\",\n  options: [\"A monument\", \"A city\", \"A river\", \"A dance\"],\n  answer: \"A monument\"\n}, {\n  question: \"What is the Taj Mahal?\",\n  options: [\"A monument\", \"A city\", \"A river\", \"A dance\"],\n  answer: \"A monument\"\n}, {\n  question: \"What is the Taj Mahal?\",\n  options: [\"A monument\", \"A city\", \"A river\", \"A dance\"],\n  answer: \"A monument\"\n}, {\n  question: \"What is the Taj Mahal?\",\n  options: [\"A monument\", \"A city\", \"A river\", \"A dance\"],\n  answer: \"A monument\"\n}];\nconst QuizQuestions = () => {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [timer, setTimer] = useState(600); // 10 minutes\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (timer === 0) {\n      navigate(\"/quiz/results\", {\n        state: {\n          score\n        }\n      });\n    }\n    const countdown = setInterval(() => {\n      if (timer > 0) setTimer(prev => prev - 1);\n    }, 1000);\n    return () => clearInterval(countdown);\n  }, [timer, navigate, score]);\n  const handleOptionClick = option => {\n    if (option === questions[currentQuestion].answer) {\n      setScore(prev => prev + 1);\n    }\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(prev => prev + 1);\n    } else {\n      navigate(\"/quiz/results\", {\n        state: {\n          score\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-questions-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: questions[currentQuestion].question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-container\",\n      children: questions[currentQuestion].options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleOptionClick(option),\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: [\"Time Remaining: \", Math.floor(timer / 60), \":\", timer % 60 < 10 ? `0${timer % 60}` : timer % 60]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(\"/quiz/results\", {\n        state: {\n          score\n        }\n      }),\n      className: \"submit-button\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizQuestions, \"kirdrJM0aS9GZP3myl4P0pSDVtk=\", false, function () {\n  return [useNavigate];\n});\n_c = QuizQuestions;\nexport default QuizQuestions;\nvar _c;\n$RefreshReg$(_c, \"QuizQuestions\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","questions","question","options","answer","QuizQuestions","_s","currentQuestion","setCurrentQuestion","score","setScore","timer","setTimer","navigate","state","countdown","setInterval","prev","clearInterval","handleOptionClick","option","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","Math","floor","_c","$RefreshReg$"],"sources":["C:/Users/omkar/OneDrive/画像/my-mern-project/my-mern-project/frontend/src/components/QuizQuestions.js"],"sourcesContent":["// src/components/QuizQuestions.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './QuizQuestions.css'; // Add your styles for the quiz questions\r\n\r\nconst questions = [\r\n  // Add your 15 questions here\r\n  { question: \"What is the Taj Mahal?\", options: [\"A monument\", \"A city\", \"A river\", \"A dance\"], answer: \"A monument\" },\r\n  { question: \"What is the Taj Mahal?\", options: [\"A monument\", \"A city\", \"A river\", \"A dance\"], answer: \"A monument\" },\r\n  { question: \"What is the Taj Mahal?\", options: [\"A monument\", \"A city\", \"A river\", \"A dance\"], answer: \"A monument\" },\r\n  { question: \"What is the Taj Mahal?\", options: [\"A monument\", \"A city\", \"A river\", \"A dance\"], answer: \"A monument\" },\r\n  { question: \"What is the Taj Mahal?\", options: [\"A monument\", \"A city\", \"A river\", \"A dance\"], answer: \"A monument\" },\r\n  \r\n  { question: \"What is the Taj Mahal?\", options: [\"A monument\", \"A city\", \"A river\", \"A dance\"], answer: \"A monument\" },\r\n  \r\n  { question: \"What is the Taj Mahal?\", options: [\"A monument\", \"A city\", \"A river\", \"A dance\"], answer: \"A monument\" },\r\n  \r\n  { question: \"What is the Taj Mahal?\", options: [\"A monument\", \"A city\", \"A river\", \"A dance\"], answer: \"A monument\" },\r\n  \r\n  { question: \"What is the Taj Mahal?\", options: [\"A monument\", \"A city\", \"A river\", \"A dance\"], answer: \"A monument\" },\r\n  \r\n  \r\n  \r\n];\r\n\r\nconst QuizQuestions = () => {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [timer, setTimer] = useState(600); // 10 minutes\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (timer === 0) {\r\n      navigate(\"/quiz/results\", { state: { score } });\r\n    }\r\n    const countdown = setInterval(() => {\r\n      if (timer > 0) setTimer(prev => prev - 1);\r\n    }, 1000);\r\n    \r\n    return () => clearInterval(countdown);\r\n  }, [timer, navigate, score]);\r\n\r\n  const handleOptionClick = (option) => {\r\n    if (option === questions[currentQuestion].answer) {\r\n      setScore(prev => prev + 1);\r\n    }\r\n    if (currentQuestion < questions.length - 1) {\r\n      setCurrentQuestion(prev => prev + 1);\r\n    } else {\r\n      navigate(\"/quiz/results\", { state: { score } });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-questions-container\">\r\n      <h2>{questions[currentQuestion].question}</h2>\r\n      <div className=\"options-container\">\r\n        {questions[currentQuestion].options.map(option => (\r\n          <button key={option} onClick={() => handleOptionClick(option)}>\r\n            {option}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <div className=\"timer\">\r\n        Time Remaining: {Math.floor(timer / 60)}:{timer % 60 < 10 ? `0${timer % 60}` : timer % 60}\r\n      </div>\r\n      <button onClick={() => navigate(\"/quiz/results\", { state: { score } })} className=\"submit-button\">Submit</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizQuestions;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}